// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  name          String
  surname       String
  password      String
  birth_date    DateTime
  phone_number  String
  address       String?
  image         String?
  role          Role           @default(USER)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  sellerCompany SellerCompany?
}

model SellerCompany {
  id        Int       @id @default(autoincrement())
  name      String
  address   String
  phone     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  owner     User      @relation(fields: [ownerId], references: [id])
  ownerId   Int       @unique
  products  Product[] // Şirkete ait ürünler
}

model Category {
  id            Int        @id @default(autoincrement())
  name          String
  parentId      Int?
  parent        Category?  @relation("CategoryToCategory", fields: [parentId], references: [id])
  subcategories Category[] @relation("CategoryToCategory")

  products Product[] // Kategorideki ürünler
}

model Product {
  id              Int            @id @default(autoincrement())
  name            String
  price           Float
  rating          Float?
  description     String?
  colors          String
  image           String
  categoryId      Int
  category        Category       @relation(fields: [categoryId], references: [id])
  SellerCompany   SellerCompany? @relation(fields: [sellerCompanyId], references: [id])
  sellerCompanyId Int?
}

enum Role {
  USER
  ADMIN
  SELLER
}
